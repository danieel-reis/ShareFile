/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package connect;

/**
 *
 * @author daniel
 */
public class MainWindown extends javax.swing.JFrame {

    /**
     * Creates new form MainWindown
     */
    public MainWindown() {
        initComponents();
//        this.setExtendedState(MAXIMIZED_BOTH);
        this.setResizable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        connectButton = new javax.swing.JButton();
        disconnectButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        disconnectButton.setText("Disconnect");
        disconnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectButtonActionPerformed(evt);
            }
        });

        infoArea.setColumns(20);
        infoArea.setRows(5);
        jScrollPane1.setViewportView(infoArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(connectButton)
                                                .addGap(18, 18, 18)
                                                .addComponent(disconnectButton)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(connectButton)
                                        .addComponent(disconnectButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {
        connectServerSocket();
    }

    private void disconnectButtonActionPerformed(java.awt.event.ActionEvent evt) {
        disconnectServerSocket();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainWindown main = new MainWindown();
                main.setVisible(true);

                /* Inicializa o servidor UDP */
                UDPServerThread udpServerThread = new UDPServerThread();
                udpServerThread.start();

                main.connectButton.setEnabled(true);
                main.disconnectButton.setEnabled(false);
                main.infoArea.setEditable(false);

                main.connectServerSocket();
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton connectButton;
    private javax.swing.JButton disconnectButton;
    private static javax.swing.JTextArea infoArea;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration

    private SocketServer mySocket;

    public void connectServerSocket() {
        mySocket = new SocketServer();
        Thread thread = new Thread(mySocket);
        thread.start();
        connectButton.setEnabled(false);
        disconnectButton.setEnabled(true);
    }

    public void disconnectServerSocket() {
        mySocket.disconnect();
        connectButton.setEnabled(true);
        disconnectButton.setEnabled(false);
    }

    public static void appendText(String text) {
        infoArea.append(text + "\n");
    }

}
